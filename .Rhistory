#############################
x<-matrix(1:6,2,3) #Lo q pongo en la matriz, 2 filas, 3 columnas
x
x[,2]
x[1,1:2]
x[3,]
x[3] #Da error porque estaria pidiendo la 3 fila y no hay
ncol(x); nrow(x)
t(x)
cbind(1,x) #Pega una columna de unos con la matriz
cbind(1:3,1:6) #Recicla el primer elemento las veces q lo requiera
x
apply(x,1,sum) #Aplico a la matriz una funci贸n segun la funci贸n q yo quiera. Aplica a la matrix x por fila le suma 1
#############################
a=diag(3) #Matriz cuadrada (en este caso 3x3) con diagonal de 1
a
b=rnorm(9) #Forma de obtener 9 valores aleatorios de la dist normal con media 0 y desvio estandar 1. Me da vector de 9 elementos
b
dim(b)=c(3,3) #le cambio las dimensiones
b
require(abind) #Forma de instalar el paquete abind. Es como antes de pegar (cbinf y rbind)
abind(a,b,along=3)->c	#Pegar matriz a con la b. Y con along empiezo a jugar con dimensiones. A lo largo de 3 me genera tiempos, la matriz a es el primer tiempo y la b el segundo creo
c
abind(a,b,along=1)->d
d
abind(a,b,along=2)->e
e
x
apply(x,1,sum) #Aplico a la matriz una funci贸n segun la funci贸n q yo quiera. Aplica a la matrix x por fila le suma 1
length(x)
max(x); min(x) #Elementos maximos y minimos
max(dim(x)) #Maximo de las dimensiones. Aca da 3
c<-matrix(c(2,1,5,6,3,8,4,9,2,7,3,5),nrow=3,ncol=4)
c
c[order(c[,1]),] #Ordena por columnas, por default es creciente. Si la quiero decreciente uso el decreasing=T
#################################################
x
diag(x) #a pesar de no ser cuadrada me da la diagonal
l<-diag(5) #Matriz diagonal de 5x5
l
s=diag(10,3,4) #Matriz de 3 filas y 4 columnas con diagonal de 10
s
x=c(2,3,4,5)
x
y=diag(x,4,4) #Matriz de 4x4 con diagonal a x
y
#############################
x<-matrix(1:6,2,3) #Lo q pongo en la matriz, 2 filas, 3 columnas
x
mean(x)
sd(x)
solve(x)
det(x)
#######################################
rm(list=ls())
B=matrix(c(1,8,5,3,0,2,3,6,1), ncol=3,byrow=TRUE)
B
L=B #Para no sobreescribir
L[lower.tri(B)]=0 #Coloca 0 en el triangulo inf, sin la diagonal Triang inf es
#de la diagonal para abajo. A la matriz L [elementos de la matriz B] le ponga 0``
L
rm(list=ls())
setwd("/Users/cande/Desktop/Labo/parcial/")
a<-matrix(c(1,-9,3,0,5,-6,7,8,10,10,1,20),nrow=3,ncol=4,byrow=T)
b<-c(1,4,2,6,7,3)
c<-5
d<-matrix(c(T,T,T,F,T,T),nrow=2,ncol=3)
a[b]
e<-a[b]
f<-a[d]
f
dim(a)
dim(b)
dim(d)
class(f)
class(e)
a[2,]<-a[3,]**2
a
rep(b,c)
g<-rep(b,c)
class(g)
b<c
h<-b<c
h==d
i<-h==d
!(i)
!((b<c)==d)
